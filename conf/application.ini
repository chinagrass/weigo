[product : common]
application.directory=APP_PATH "/application/"
application.library=APP_PATH "/application/library"
;application.ext	String	php	PHP脚本的扩展名
;application.bootstrap	String	Bootstrapplication.php	Bootstrap路径(绝对路径)
;application.library	String	application.directory + "/library"	本地(自身)类库的绝对目录地址
;application.baseUri	String	NULL	在路由中, 需要忽略的路径前缀, 一般不需要设置, Yaf会自动判断.
;application.dispatcher.defaultModule	String	index	默认的模块
;application.dispatcher.throwException	Bool	True	在出错的时候, 是否抛出异常
;application.dispatcher.catchException	Bool	False	是否使用默认的异常捕获Controller, 如果开启, 在有未捕获的异常的时候, 控制权会交给ErrorController的errorAction方法, 可以通过$request->getException()获得此异常对象
;application.dispatcher.defaultController	String	index	默认的控制器
;application.dispatcher.defaultAction	String	index	默认的动作
;application.view.ext	String	phtml	视图模板扩展名
;application.modules	String	Index	声明存在的模块名, 请注意, 如果你要定义这个值, 一定要定义Index Module
;application.system.*	String	*	通过这个属性, 可以修改yaf的runtime configure, 比如application.system.lowcase_path, 但是请注意只有PHP_INI_ALL的配置项才可以在这里被修改, 此选项从2.2.0开始引入
routes.regex.type="regex"
routes.regex.match="[a-zA-Z-_0-9]+"
[common]
;自定义路由
;顺序很重要
routes.regex.type="regex"
routes.regex.match="[a-zA-Z-_0-9]+"
;routes.regex.route.controller=Index
;routes.regex.route.action=action
;routes.regex.map.1=name
;routes.regex.map.2=value
;添加一个名为simple的路由协议
routes.simple.type="simple"
routes.simple.controller=c
routes.simple.module=m
routes.simple.action=a
;添加一个名为supervar的路由协议
routes.supervar.type="supervar"
routes.supervar.varname=r